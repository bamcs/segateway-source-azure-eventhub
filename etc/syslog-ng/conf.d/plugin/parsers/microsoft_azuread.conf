rewrite segway-microsoft-azuread-cloud{
    set("${.Vendor.tenantId}",value(".ecs.cloud.account.id"));
    set("azure",value(".ecs.cloud.provider"));
    set("${.Vendor.location}", value(".ecs.cloud.region"));
    set("AzureAD",value(".ecs.cloud.service.name"));

    set("${.Vendor.tenantId}",value(".ecs.cloud.target.account.id"));
    set("azure",value(".ecs.cloud.target.provider"));
    set("${.Vendor.location}", value(".ecs.cloud.target.region"));
    set("AzureAD",value(".ecs.cloud.target.service.name"));

    set("${.Vendor.properties.homeTenantId}",value(".ecs.cloud.origin.account.id"));
    set("azure",value(".ecs.cloud.origin.provider"));
    set("AzureAD",value(".ecs.cloud.target.service.name"));

    unset(value('.Vendor.tenantId'));
    unset(value('.Vendor.location'));
    unset(value('.Vendor.properties.homeTenantId'));

};

rewrite segway-microsoft-azuread-source{
    set("${.Vendor.properties.userDisplayName}", value(".ecs.source.user.full_name"));
    set("${.Vendor.properties.userId}", value(".ecs.source.user.id"));
    set("${.Vendor.properties.userPrincipalName}", value(".ecs.source.user.name"));

    unset(value(".Vendor.properties.userDisplayName"));
    unset(value(".Vendor.properties.userId"));
    unset(value(".Vendor.properties.userPrincipalName"));
};

block parser segway-microsoft-azuread-signinglogs() {
 channel {
        rewrite{
            set('', value('.ecs.client.ip'))
        };
        rewrite(segway-microsoft-azuread-cloud);
        rewrite(segway-microsoft-azuread-source);
   };
};
application segway-microsoft-azuread-signinglogs[segway-microsoft-azuread] {
	filter {
        "${.Vendor.category}" == "SignInLogs";
    };	
    parser { segway-microsoft-azuread-signinglogs(); };
};